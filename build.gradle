buildscript {
   repositories { 
      mavenLocal() 
      jcenter()
      mavenCentral()
   }
   dependencies {
      classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.4.RELEASE")
      //classpath 'org.kordamp.gradle:stats-gradle-plugin:0.2.2'
   }
}

plugins { 
   id 'io.franzbecker.gradle-lombok' version '1.14'
   id "io.spring.dependency-management" version "1.0.7.RELEASE" 
   id "com.github.kt3k.coveralls" version "2.8.1" 
   id "org.owasp.dependencycheck" version "3.1.2"
   id "org.asciidoctor.convert" version "1.5.3"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: 'org.kordamp.gradle.stats'

jar {
   baseName = 'auth-service'
   version =  '0.1'
}

repositories {
   mavenLocal() 
   jcenter()
   mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
   all*.exclude module : 'spring-boot-starter-logging'
}

if (project.hasProperty('travis')) {
   println 'Using travis profile for building ' + project.getName()
   apply from: 'gradle/build_dependencies.gradle'
   apply from: 'gradle/profile-travis.gradle'
} else if (project.hasProperty('release') || project.hasProperty('clean-release')) {
   println 'Using release profile for building ' + project.getName()
   apply from: 'gradle/build_dependencies.gradle'
   apply from: 'gradle/profile-release.gradle'   
}

dependencies {
   compile("org.springframework.boot:spring-boot-starter-data-rest")
   compile("org.springframework:spring-context-support")
   compile("org.springframework.boot:spring-boot-starter-amqp")

   compile("io.springfox:springfox-swagger-ui:2.9.0")

   compile("edu.kit.datamanager:service-base:0.1")

   compile("com.monitorjbl:spring-json-view:0.16")
   compile("org.postgresql:postgresql:42.2.1")

   testCompile("com.h2database:h2:1.4.194")
   testCompile("org.springframework.restdocs:spring-restdocs-mockmvc")
   testCompile("org.springframework.boot:spring-boot-starter-test")   
   testCompile("org.springframework:spring-test")
   testCompile 'org.springframework.security:spring-security-test'

   asciidoctor('org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.2.RELEASE')
}

bootJar {
   manifest {
      attributes 'Main-Class': 'org.springframework.boot.loader.PropertiesLauncher'
   }
   dependsOn asciidoctor
   from ("${asciidoctor.outputDir}/html5") {
      into 'static/docs'
   }
   launchScript()
}

test {
   testLogging {
      outputs.upToDateWhen {false}
      showStandardStreams = true
   }
}

lombok {
   version = '1.18.4'
   sha256 = ""
}